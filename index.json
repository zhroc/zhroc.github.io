[{"content":"创建密钥对 首先在客户端设备上打开终端，Windows端打开命令行即可，然后创建密钥对，这里使用ed25519的算法生成key，关于ssh key的各种不同算法的选择可以参考这里\n1 ssh-keygen -t ed25519 随后一路回即可，密钥对一般会保存在当前用户的隐藏目录.ssh中，windows用户应该去C:\\Users\\用户名\\.ssh\\寻找，linux用户应该去/home/用户名/.ssh/寻找，该目录应该包含两个密钥文件，.pub后缀的文件是公钥，无后缀的为私钥，私钥不需要移动，两个文件如下图所示。 添加公钥内容至服务端 我们需要将公钥中的内容追加到服务端的/home/用户名/.ssh/目录中的authorized_key文件中去。如果没有上述目录与文件，则需要手动创建。可以通过密码连接ssh后用vim直接编辑authorized_key文件，当然也可以使用以下命令进行添加，两者的效果是一致的。\n1 cat ~/.ssh/id_ed25519.pub | ssh username@remote_host \u0026#34;mkdir -p ~/.ssh \u0026amp;\u0026amp; touch ~/.ssh/authorized_keys \u0026amp;\u0026amp; chmod -R go= ~/.ssh \u0026amp;\u0026amp; cat \u0026gt;\u0026gt; ~/.ssh/authorized_keys\u0026#34; 服务端ssh连接配置修改 在服务端打开/etc/ssh/sshd_config配置文件，在空白处添加以下内容后保存退出。\n1 2 PubkeyAuthentication yes PasswordAuthentication no 接着重启ssh服务即可\n1 sudo systemctl restart ssh 尝试密钥登录 现在就可以在客户端重新尝试ssh连接了，会发现不需要密码就连接上了。\n参考文章\nlinux设置ssh密钥登录详细教程 ","permalink":"https://zhroc.github.io/posts/ssh-disable-password-login/","summary":"创建密钥对 首先在客户端设备上打开终端，Windows端打开命令行即可，然后创建密钥对，这里使用ed25519的算法生成key，关于ssh key的各种不同算法的选择可以参考这里 1 ssh-keygen -t ed25519 随后一路回即可，密钥对一般会保存在当前用户的隐藏目录.ssh中，windows用户应该去C:\\Us","title":"使用密钥连接ssh 关闭密码连接ssh"},{"content":"准备工作 创建好hugo源文件仓库和github pages仓库（均不要添加readme文件）,更新一下索引和软件包\n1 2 apt update apt upgrade 下载安装hugo 1 2 3 wget https://github.com/spf13/hugo/releases/download/v0.14/hugo_0.14_amd64.deb dpkg -i hugo*.deb hugo version 创建站点配置主题 1 hugo new site myblog 进入目录初始化git和使用模块方式管理主题\n1 2 3 cd myblog/ git init git submodule add https://github.com/zhroc/hugo-PaperMod.git themes/hugo-PaperMod 复制主题中这些文件到站点目录 新建一篇文章并预览\n1 2 hugo new posts/blog-test.md hugo server -D 添加github action 在 .github/workflows目录下新建deploy.yml文件 填写好以下内容\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 name: deploy on: push: workflow_dispatch: schedule: # Runs everyday at 8:00 AM - cron: \u0026#34;0 0 * * *\u0026#34; jobs: build: runs-on: ubuntu-latest steps: - name: Checkout uses: actions/checkout@v2 with: submodules: true fetch-depth: 0 - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: \u0026#34;latest\u0026#34; - name: Build Web run: hugo - name: Deploy Web uses: peaceiris/actions-gh-pages@v3 with: PERSONAL_TOKEN: ${{ secrets.PERSONAL_TOKEN }} EXTERNAL_REPOSITORY: zhroc/zhroc.github.io PUBLISH_BRANCH: master PUBLISH_DIR: ./public commit_message: ${{ github.event.head_commit.message }} 创建github的token 进入https://github.com/settings/tokens 创建经典令牌 权限需要开启 repo 与 workflow 进入github的Settings - Secrets - Actions - Repository secrets - New repository secret 添加 PERSONAL_TOKEN 环境变量为刚才的 Token\n关联提交远程仓库 设置好git用户名\n1 2 git config --global user.email \u0026#34;git@github.com\u0026#34; git config --global user.name \u0026#34;zhroc\u0026#34; 提交\n1 2 3 4 5 git remote add origin https://github.com/zhroc/zhroc-blog.git git add . git status git commit -m \u0026#34;new\u0026#34; git push -u origin main 参考文章\nhugo博客搭建 | PaperMod主题 Hugo + GitHub Action，搭建你的博客自动发布系统 从零开始的 Hugo 博客搭建 ","permalink":"https://zhroc.github.io/posts/deploy_blog_study/","summary":"准备工作 创建好hugo源文件仓库和github pages仓库（均不要添加readme文件）,更新一下索引和软件包 1 2 apt update apt upgrade 下载安装hugo 1 2 3 wget https://github.com/spf13/hugo/releases/download/v0.14/hugo_0.14_amd64.deb dpkg -i hugo*.deb hugo version 创建站点配置主题 1 hugo new site myblog 进入目录初始化git和使用模块方式管理主题 1 2 3 cd myblog/ git init git submodule add https://github.com/zhroc/hugo-PaperMod.git themes/hugo-PaperMod 复制主题中这些文件到站点目录","title":"博客部署简要记录"}]